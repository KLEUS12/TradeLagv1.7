local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer or game:GetService("Players").LocalPlayer
while not player do wait() player = game.Players.LocalPlayer or game:GetService("Players").LocalPlayer end
local PlayerGui = player:WaitForChild("PlayerGui")

if PlayerGui:FindFirstChild("LoadingMenu") then
    PlayerGui.LoadingMenu:Destroy()
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LoadingMenu"
ScreenGui.Parent = PlayerGui

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 350, 0, 150)
Frame.Position = UDim2.new(0.5, -175, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
Frame.BorderSizePixel = 0
local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 18)

local Gradient = Instance.new("UIGradient", Frame)
Gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 0, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 200, 255))
}
Gradient.Rotation = 45

local Title = Instance.new("TextLabel", Frame)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 15, 0, 12)
Title.Size = UDim2.new(0, 200, 0, 25)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
Title.TextStrokeTransparency = 0.5

local SettingsButton = Instance.new("ImageButton", Frame)
SettingsButton.Size = UDim2.new(0, 28, 0, 28)
SettingsButton.Position = UDim2.new(1, -75, 0, 10)
SettingsButton.BackgroundTransparency = 1
SettingsButton.Image = "rbxassetid://6031280882"
SettingsButton.AutoButtonColor = false

local CloseButton = Instance.new("ImageButton", Frame)
CloseButton.Size = UDim2.new(0, 28, 0, 28)
CloseButton.Position = UDim2.new(1, -35, 0, 10)
CloseButton.BackgroundTransparency = 1
CloseButton.Image = "rbxassetid://6031094678"
CloseButton.AutoButtonColor = false

local LoadingBarBackground = Instance.new("Frame", Frame)
LoadingBarBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
LoadingBarBackground.Position = UDim2.new(0, 15, 1, -35)
LoadingBarBackground.Size = UDim2.new(1, -30, 0, 25)
LoadingBarBackground.BorderSizePixel = 0
local bgCorner = Instance.new("UICorner", LoadingBarBackground)
bgCorner.CornerRadius = UDim.new(0, 12)

local LoadingBar = Instance.new("Frame", LoadingBarBackground)
LoadingBar.BackgroundColor3 = Color3.fromRGB(170, 85, 255)
LoadingBar.Size = UDim2.new(0, 0, 1, 0)
LoadingBar.BorderSizePixel = 0
local barCorner = Instance.new("UICorner", LoadingBar)
barCorner.CornerRadius = UDim.new(0, 12)

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫
local function createToggleButton(parent, posY, text)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(0, 70, 0, 35)
    button.Position = UDim2.new(0, 15, 0, posY)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
    button.Text = "OFF"
    button.AutoButtonColor = false
    local corner = Instance.new("UICorner", button)
    corner.CornerRadius = UDim.new(0, 12)

    local label = Instance.new("TextLabel", parent)
    label.Size = UDim2.new(0, 90, 0, 35)
    label.Position = UDim2.new(0, 95, 0, posY)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.GothamBold
    label.TextSize = 18
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextXAlignment = Enum.TextXAlignment.Left

    local loadingBg = Instance.new("Frame", parent)
    loadingBg.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
    loadingBg.Position = UDim2.new(0, 90, 0, posY + 5)
    loadingBg.Size = UDim2.new(0, 150, 0, 25)
    loadingBg.BorderSizePixel = 0
    loadingBg.Visible = false
    local loadingBgCorner = Instance.new("UICorner", loadingBg)
    loadingBgCorner.CornerRadius = UDim.new(0, 12)

    local loadingBar = Instance.new("Frame", loadingBg)
    loadingBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    loadingBar.Size = UDim2.new(0, 0, 1, 0)
    loadingBar.BorderSizePixel = 0
    local loadingBarCorner = Instance.new("UICorner", loadingBar)
    loadingBarCorner.CornerRadius = UDim.new(0, 12)

    return {
        button = button,
        label = label,
        loadingBg = loadingBg,
        loadingBar = loadingBar,
        toggled = false,
        tween = nil
    }
end

local TradeLag = createToggleButton(Frame, 60, "TradeLag")
local TradeVacuum = createToggleButton(Frame, 105, "TradeVacuum")

local function runLoadingAnimation(toggleData)
    if toggleData.loadingBg.Visible then return end
    toggleData.loadingBg.Visible = true
    toggleData.loadingBar.Size = UDim2.new(0, 0, 1, 0)
    local duration = 5

    toggleData.button.AutoButtonColor = false
    toggleData.button.Text = "Loading..."
    toggleData.button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    toggleData.tween = TweenService:Create(toggleData.loadingBar, TweenInfo.new(duration, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 1, 0)})
    toggleData.tween:Play()

    toggleData.tween.Completed:Connect(function()
        toggleData.loadingBg.Visible = false
        toggleData.toggled = not toggleData.toggled
        if toggleData.toggled then
            toggleData.button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            toggleData.button.Text = "ON"
        else
            toggleData.button.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
            toggleData.button.Text = "OFF"
        end
        toggleData.button.AutoButtonColor = true
    end)
end

TradeLag.button.MouseButton1Click:Connect(function()
    if not TradeLag.loadingBg.Visible then
        runLoadingAnimation(TradeLag)
    end
end)

TradeVacuum.button.MouseButton1Click:Connect(function()
    if not TradeVacuum.loadingBg.Visible then
        runLoadingAnimation(TradeVacuum)
    end
end)

LoadingBarBackground.Visible = true
local loadingTween = TweenService:Create(LoadingBar, TweenInfo.new(6, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 1, 0)})
loadingTween:Play()

loadingTween.Completed:Connect(function()
    LoadingBarBackground.Visible = false
    TradeLag.button.Visible = true
    TradeLag.label.Visible = true
    TradeVacuum.button.Visible = true
    TradeVacuum.label.Visible = true
end)

TradeLag.button.Visible = false
TradeLag.label.Visible = false
TradeVacuum.button.Visible = false
TradeVacuum.label.Visible = false

local MiniIcon = Instance.new("TextButton", ScreenGui)
MiniIcon.Size = UDim2.new(0, 100, 0, 40)
MiniIcon.Position = UDim2.new(1, -110, 0, 10)
MiniIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
MiniIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
MiniIcon.Font = Enum.Font.GothamBold
MiniIcon.TextSize = 18
MiniIcon.Visible = false
MiniIcon.AutoButtonColor = true
MiniIcon.BorderSizePixel = 0
local miniCorner = Instance.new("UICorner", MiniIcon)
miniCorner.CornerRadius = UDim.new(0, 12)

CloseButton.MouseButton1Click:Connect(function()
    Frame.Visible = false
    MiniIcon.Visible = true
end)

MiniIcon.MouseButton1Click:Connect(function()
    Frame.Visible = true
    MiniIcon.Visible = false
end)

-------------------------------------------------
-- üåç –ü–µ—Ä–µ–≤–æ–¥—ã
local translations = {
    EN = {
        Title = "TradeLock v.1.8",
        TradeLag = "TradeLag",
        TradeVacuum = "TradeVacuum",
        Settings = "Settings",
        Language = "Language:",
        Back = "Back",
        CheckStatus = "Check Status",
        MiniIcon = "TradeLock"
    },
    RU = {
        Title = "–¢—Ä–µ–π–¥–õ–æ–∫ v.1.8",
        TradeLag = "–¢—Ä–µ–π–¥–õ–∞–≥",
        TradeVacuum = "–¢—Ä–µ–π–¥–í–∞–∫—É—É–º",
        Settings = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        Language = "–Ø–∑—ã–∫:",
        Back = "–ù–∞–∑–∞–¥",
        CheckStatus = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
        MiniIcon = "–¢—Ä–µ–π–¥–õ–æ–∫"
    }
}

local SettingsMenu = Instance.new("Frame", ScreenGui)
SettingsMenu.Size = UDim2.new(0, 300, 0, 200)
SettingsMenu.Position = UDim2.new(0.5, -150, 0.5, -100)
SettingsMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
SettingsMenu.Visible = false
SettingsMenu.BorderSizePixel = 0
local settingsCorner = Instance.new("UICorner", SettingsMenu)
settingsCorner.CornerRadius = UDim.new(0, 18)

local settingsTitle = Instance.new("TextLabel", SettingsMenu)
settingsTitle.Font = Enum.Font.GothamBold
settingsTitle.TextSize = 20
settingsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
settingsTitle.BackgroundTransparency = 1
settingsTitle.Position = UDim2.new(0, 15, 0, 12)
settingsTitle.Size = UDim2.new(1, -30, 0, 25)
settingsTitle.TextXAlignment = Enum.TextXAlignment.Left

local languageLabel = Instance.new("TextLabel", SettingsMenu)
languageLabel.Font = Enum.Font.GothamBold
languageLabel.TextSize = 18
languageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
languageLabel.BackgroundTransparency = 1
languageLabel.Position = UDim2.new(0, 15, 0, 60)
languageLabel.Size = UDim2.new(0, 120, 0, 25)
languageLabel.TextXAlignment = Enum.TextXAlignment.Left

local languageButton = Instance.new("TextButton", SettingsMenu)
languageButton.Size = UDim2.new(0, 80, 0, 30)
languageButton.Position = UDim2.new(0, 140, 0, 58)
languageButton.Font = Enum.Font.GothamBold
languageButton.TextSize = 16
languageButton.TextColor3 = Color3.fromRGB(255, 255, 255)
languageButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
languageButton.AutoButtonColor = true
local langCorner = Instance.new("UICorner", languageButton)
langCorner.CornerRadius = UDim.new(0, 10)

local backButton = Instance.new("TextButton", SettingsMenu)
backButton.Size = UDim2.new(0, 80, 0, 30)
backButton.Position = UDim2.new(0.5, -40, 1, -45)
backButton.Font = Enum.Font.GothamBold
backButton.TextSize = 16
backButton.TextColor3 = Color3.fromRGB(255, 255, 255)
backButton.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
local backCorner = Instance.new("UICorner", backButton)
backCorner.CornerRadius = UDim.new(0, 10)

-- ‚úÖ Check Status button
local statusButton = Instance.new("TextButton", SettingsMenu)
statusButton.Size = UDim2.new(0, 120, 0, 30)
statusButton.Position = UDim2.new(0.5, -60, 0, 110)
statusButton.Font = Enum.Font.GothamBold
statusButton.TextSize = 16
statusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
statusButton.BackgroundColor3 = Color3.fromRGB(0, 200, 120)
local statusCorner = Instance.new("UICorner", statusButton)
statusCorner.CornerRadius = UDim.new(0, 10)

-- üö® –í—Å–ø–ª—ã–≤–∞—é—â–∏–π error
local errorLabel = Instance.new("TextLabel", ScreenGui)
errorLabel.Size = UDim2.new(0, 200, 0, 40)
errorLabel.Position = UDim2.new(0.5, -100, 0.7, 0)
errorLabel.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
errorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
errorLabel.Font = Enum.Font.GothamBold
errorLabel.TextSize = 20
errorLabel.Text = "erroR"
errorLabel.Visible = false
errorLabel.BorderSizePixel = 0
local errorCorner = Instance.new("UICorner", errorLabel)
errorCorner.CornerRadius = UDim.new(0, 12)

-------------------------------------------------
-- üîÑ –õ–æ–≥–∏–∫–∞
local currentLanguage = "EN"

local function updateLanguage(lang)
    Title.Text = translations[lang].Title
    TradeLag.label.Text = translations[lang].TradeLag
    TradeVacuum.label.Text = translations[lang].TradeVacuum
    settingsTitle.Text = translations[lang].Settings
    languageLabel.Text = translations[lang].Language
    backButton.Text = translations[lang].Back
    statusButton.Text = translations[lang].CheckStatus
    MiniIcon.Text = translations[lang].MiniIcon
    languageButton.Text = lang
end

SettingsButton.MouseButton1Click:Connect(function()
    Frame.Visible = false
    SettingsMenu.Visible = true
end)

backButton.MouseButton1Click:Connect(function()
    SettingsMenu.Visible = false
    Frame.Visible = true
end)

languageButton.MouseButton1Click:Connect(function()
    currentLanguage = (currentLanguage == "EN" and "RU" or "EN")
    updateLanguage(currentLanguage)
end)

statusButton.MouseButton1Click:Connect(function()
    errorLabel.Visible = true
    errorLabel.TextTransparency = 0
    errorLabel.BackgroundTransparency = 0
    errorLabel.Position = UDim2.new(0.5, -100, 0.7, 0)

    local tween = TweenService:Create(errorLabel, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        TextTransparency = 1,
        BackgroundTransparency = 1,
        Position = UDim2.new(0.5, -100, 0.6, 0)
    })
    tween:Play()

    tween.Completed:Connect(function()
        errorLabel.Visible = false
    end)
end)

-- –°—Ç–∞—Ä—Ç
updateLanguage(currentLanguage)
